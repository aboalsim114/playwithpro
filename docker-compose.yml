# ===========================================
# PlayWithPro - Professional Docker Compose
# Development and Production Configuration
# ===========================================

version: '3.8'

services:
  # ===========================================
  # Development Service
  # ===========================================
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    container_name: playwithpro-dev
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    networks:
      - playwithpro-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    profiles:
      - dev

  # ===========================================
  # Production Service
  # ===========================================
  app-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: playwithpro-prod
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
    networks:
      - playwithpro-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    profiles:
      - prod

  # ===========================================
  # Nginx Reverse Proxy (Optional)
  # ===========================================
  nginx:
    image: nginx:1.25-alpine
    container_name: playwithpro-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app-prod
    networks:
      - playwithpro-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - nginx

  # ===========================================
  # Monitoring Service (Optional)
  # ===========================================
  monitoring:
    image: prom/prometheus:latest
    container_name: playwithpro-monitoring
    ports:
      - "9090:9090"
    volumes:
      - ./docker/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - playwithpro-network
    restart: unless-stopped
    profiles:
      - monitoring

# ===========================================
# Networks
# ===========================================
networks:
  playwithpro-network:
    driver: bridge
    name: playwithpro-network

# ===========================================
# Volumes
# ===========================================
volumes:
  node_modules:
    name: playwithpro-node-modules
  nginx_logs:
    name: playwithpro-nginx-logs
  prometheus_data:
    name: playwithpro-prometheus-data
